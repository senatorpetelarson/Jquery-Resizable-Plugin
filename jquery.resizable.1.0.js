/* * resizable 1.0.0 * ----------------- * Resizes an image to full width & height. Crops where needed * http://www.jiffymedia.com/ * * * Copyright (c) 2011 Jiffy Media * Licensed under the MIT licenses. * */;(function($) {	// Custom selector to find `img` elements that have a valid `src` attribute and have not already loaded.    $.expr[':'].uncached = function(obj) {        return $(obj).is('img[src!=""]') && ! obj.complete;     };        $.expr[':'].cached = function(obj) {        return $(obj).is('img[src!=""]') && obj.complete;     };        $.fn.extend({        resizable: function(opts) {        	var options = {        		centeredY: true,        		centeredX: true,        		addWidthHeightAttributes: true,        		maxHeight:-1,        		maxWidth:-1 }, windowObj, windowWidth, windowHeight;	    		windowObj = ("onorientationchange" in window) ? $(document) : $(window);	    		windowWidth = windowObj.width();	        // Handle options object.	        if ($.isPlainObject(opts)) {	            $.each(opts,function(index,value) {	            	if(options[index]) options[index] = value;	            });	        }	        windowObj.resize(onResize);	        	        function onResize(evt) {	        	windowWidth = windowObj.width();	        	windowHeight = windowObj.height();	        }	        	        onResize();	                	return this.each(function() {        		var $me = $(this),        			imgRatio,         			imgWidth,         			imgHeight,        			resizedWidth,        			resizedHeight,        			resizedOffsetTop,        			resizedOffsetLeft,        			myCSS,        			offsetTopAttribute,        			offsetLeftAttribute,        			totalWidth,        			totalHeight;        			        		windowObj.resize(_onResize);        			        		if(!$me.complete) {        			$me.load(_onImageLoaded);        		} else {        			_onImageLoaded();        		}        		        		function _onImageLoaded(evt) {        			imgWidth = $me.width();        			imgHeight = $me.height();        			imgRatio = imgWidth/imgHeight;        			_onResize();        		}        			        		function _onResize(evt) {        			totalWidth = windowWidth;        			totalHeight = windowHeight;        			if(options.maxWidth > -1 && totalWidth > options.maxWidth) totalWidth = options.maxWidth;        			if(options.maxHeight > -1 && totalHeight > options.maxHeight) totalHeight = options.maxHeight;        			resizedWidth = totalWidth;        			resizedHeight = resizedWidth / imgRatio;        			if(resizedHeight < totalHeight) {        			    resizedHeight = totalHeight;        			    resizedWidth = resizedHeight * imgRatio;        			}        			offsetTopAttribute = ($me.css("position")=="absolute") ? "top" : "margin-top";        			resizedOffsetTop = -(resizedHeight - windowHeight)*.5;        			if(options.centeredY) $me.css(offsetTopAttribute, resizedOffsetTop+"px");        			        			resizedOffsetLeft = -(resizedWidth - windowWidth)*.5;        			offsetLeftAttribute = ($me.css("position")=="absolute") ? "left" : "margin-left";        			if(options.centeredX) $me.css(offsetLeftAttribute, resizedOffsetLeft+"px");        			        			$me.width(resizedWidth);        			$me.height(resizedHeight);        			//add the width & height attributes to the tag if it's set to do so and if it's an image tag        			if($me.is("img") && options.addWidthHeightAttributes) {         				$me.attr("width",resizedWidth);        				$me.attr("height",resizedHeight);        			}        		}        	});        }    });})(jQuery);